ΤΣΙΑΤΟΥΡΑΣ ΕΥΑΓΓΕΛΟΣ
Α.Μ. 1115201200185

Για την υλοποίηση του skiplist έχει ακολουθηθεί πιστά το documentation που βρίσκεται στην 
εκφώνηση. To hashtable αποτελείται απο 3 struct. Το πρώτο struct ειναι το hashtable όπου
περιέχεται ένας πίνακας τύπου bucket ο οποίος γίνεται allocate δυναμικά κατά την 
εκτέλεση. To struct bucket περιέχει έναν δείκτη που δείχνει στην κεφαλή της λίστας 
συγκρούσεων του συγκεκριμένου bucket. Καθε κόμβος της λίστας αυτής περιέχει ένα δείκτη
προς την εγγραφή και ενα δείκτη προς τον επόμενο κομβο. Ακολουθεί ένα ενδεικτικό σχήμα
όλων των δομών



[HASHTABLE]
+----------+      [COLLISION LIST] 
|          |     +---------+       +---------+
|----------|     |ptrToNext|----- >|ptrToNext|--->NULL
|headOfList|---->|---------|       |---------|
|----------|     |ptrToRec |--+    |ptrToRec |
|          |     +---------+  |    +---------+
|----------|                  |
|          |                  |
|----------|                  +
|          |             +-----------+
+----------+             |id,name,   |
                         |postcode,  |  [RECORD]
                         |etc..      |
                         +-----------+
                               +
                               |
                               |
 [SKIPLIST]                    |
+----------+                   |
| ptrToRec |-------------------+
|----------|
| forward  |======>  [POINTERS TO NEXT ELEMENTS]
|  array   |======>
|----------|
|   key    |
+----------+


Πολυπλοκότητες:
Για το ερωτήματα 7 η πολυπλοκότητα ειναι O(nk) όπου n = αριθμός εγγραφών στο bucket του hashtable
και k το μέγεθος του πίνακα στον οποίο εφαρμόζεται αλγόριθμος insert sort (χρήση hashtable).
Για το ερωτημα 8 η πολυπλοκότητα ειναι O(nk) όπου n = αριθμός εγγραφών που έχουν αποθηκευτεί 
και k το μέγεθος του πίνακα στον οποίο εφαρμόζεται αλγόριθμος insert sort (χρήση skiplist).
Για το ερώτημα 10 η πολυπλοκότητα ειναι 0(2n) διότι γίνονται 2 περάσματα στη δομή του skiplist,
ένα πέρασμα για τον εντοπισμό της μεγαλύτερης τιμής coursestotake και ένα πέρασμα για την 
εκτύπωση των φοιτητών που έχουν maximum coursestotake και gpa μεγαλύτερο από αυτό που έχει
δώθει απο το input.
Για το ερώτημα 11 γίνεται προσπέλαση όλων των εγγραφών μέσω του hashtable. Επίσης για κάθε
iteration που γίνεται σε κάθε bucket χρησιμοποίειται ένας δυναμικός πίνακας 2 διαστάσεων
όπου αποθηκεύονται postcode και ο αριθμός των φοιτητών που ζουν στο αντίστοιχο postcode.
Αφού έχουν προσπελασθεί όλές οι εγγραφές ενός bucket εκτυπώνονται αμέσως οι μέσοι οροι με τη
βοήθεια του πινακα. Επειτα ο πίνακας αρχικοποίεται αφού προχωρούμε στο επόμενο bucket, μειώνοντας
δραματικά την πολυπλοκήτητα εφόσον δεν γινονται συγκρισείς μεταξύ postcode που υπάρχουν σε
προηγούμενα bucket.

Compile: 
Το compile γίνεται με τη βοήθεια makefile.